from django.test import TestCase
from django.contrib.auth.models import User
from accounts.models import Utilisateur
from django.db.utils import IntegrityError

# -------------------------
# Tests for Utilisateur model
# -------------------------
class UtilisateurModelTest(TestCase):
    def setUp(self):
        self.user = User.objects.create_user(username='testuser', password='password123')

    # -------------------------
    # Test Utilisateur creation and attributes
    # -------------------------
    def test_utilisateur_created_with_user(self):
        self.assertTrue(hasattr(self.user, 'utilisateur'))

    def test_utilisateur_str(self):
        self.assertEqual(str(self.user.utilisateur), 'testuser')

    def test_code_utilisateur_autogenerated(self):
        utilisateur = self.user.utilisateur
        self.assertIsNotNone(utilisateur.code_utilisateur)
        self.assertEqual(len(utilisateur.code_utilisateur), 32)

    def test_code_utilisateur_is_unique(self):
        codes = set()
        for i in range(10):
            u = User.objects.create_user(username=f'user{i}', password='pwd123')
            code = u.utilisateur.code_utilisateur
            self.assertNotIn(code, codes)
            codes.add(code)

    def test_utilisateur_has_correct_user(self):
        utilisateur = self.user.utilisateur
        self.assertEqual(utilisateur.user.username, 'testuser')

    # -------------------------
    # Test additional fields and constraints
    # -------------------------
    def test_champs_additionnels(self):
        utilisateur = self.user.utilisateur
        utilisateur.telephone = '1234567890'
        utilisateur.save()
        self.assertEqual(utilisateur.telephone, '1234567890')

    def test_utilisateur_requires_user(self):
        with self.assertRaises(IntegrityError):
            Utilisateur.objects.create()